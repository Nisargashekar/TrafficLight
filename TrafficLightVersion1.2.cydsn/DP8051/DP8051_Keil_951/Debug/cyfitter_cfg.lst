C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEB
                    -UG) WL(2) PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_c
                    -fg.obj)

line level    source

   1          
   2          /*******************************************************************************
   3          * File Name: cyfitter_cfg.c
   4          * 
   5          * PSoC Creator  4.2
   6          *
   7          * Description:
   8          * This file contains device initialization code.
   9          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10          * This file is automatically generated by PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright (c) 2007-2018 Cypress Semiconductor.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include <string.h>
  20          #include "cytypes.h"
  21          #include "cydevice_trm.h"
  22          #include "cyfitter.h"
  23          #include "CyLib.h"
  24          #include "cyfitter_cfg.h"
  25          #include "cyapicallbacks.h"
  26          
  27          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  28          
  29          
  30          #if defined(__C51__) || defined(__CX51__)
  31                  #define CYPACKED
  32                  #define CYPACKED_ATTR
  33                  #define CYALIGNED
  34                  
  35              #define CY_CFG_UNUSED
  36                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  37          
  38          
  39          
  40                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  41                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  42                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  43          #else
                      #error Unsupported toolchain
              #endif
  46          
  47          
  48          
  49          
  50          /* Clock startup error codes                                                   */
  51          #define CYCLOCKSTART_NO_ERROR    0u
  52          #define CYCLOCKSTART_XTAL_ERROR  1u
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 2   

  53          #define CYCLOCKSTART_32KHZ_ERROR 2u
  54          #define CYCLOCKSTART_PLL_ERROR   3u
  55          #define CYCLOCKSTART_FLL_ERROR   4u
  56          #define CYCLOCKSTART_WCO_ERROR   5u
  57          
  58          
  59          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  60          /*******************************************************************************
  61          * Function Name: CyClockStartupError
  62          ********************************************************************************
  63          * Summary:
  64          *  If an error is encountered during clock configuration (crystal startup error,
  65          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  66          *  the customer, this function will stop in an infinite loop.
  67          *
  68          * Parameters:
  69          *   void
  70          *
  71          * Return:
  72          *   void
  73          *
  74          *******************************************************************************/
  75          CY_CFG_UNUSED
  76          static void CyClockStartupError(uint8 errorCode);
  77          CY_CFG_UNUSED
  78          static void CyClockStartupError(uint8 errorCode)
  79          {
  80   1          /* To remove the compiler warning if errorCode not used.                */
  81   1          errorCode = errorCode;
  82   1      
  83   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  84   1          /* we will end up here to allow the customer to implement something to  */
  85   1          /* deal with the clock condition.                                       */
  86   1      
  87   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                  CY_CFG_Clock_Startup_ErrorCallback();
              #else
  90   1          /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  91   1          /* `#START CyClockStartupError` */
  92   1      
  93   1      
  94   1      
  95   1          /* `#END` */
  96   1      
  97   1          while(1) {}
  98   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
  99   1      }
 100          #endif
 101          
 102          #define cfg_byte_table ((const void CYFAR *)0x080000u)
 103          /* IOPORT_7 Address: CYDEV_PRTDSI_PRT12_BASE Size (bytes): 6 */
 104          #define BS_IOPORT_7_VAL ((const uint8 CYFAR *)0x000803ECu)
 105          
 106          /* UDB_1_3_1_CONFIG Address: CYDEV_UCFG_B0_P2_U1_BASE Size (bytes): 128 */
 107          #define BS_UDB_1_3_1_CONFIG_VAL ((const uint8 CYFAR *)0x000803F4u)
 108          
 109          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 110          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080474u)
 111          
 112          /* IOPINS0_7 Address: CYREG_PRT12_DR Size (bytes): 10 */
 113          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x0008047Cu)
 114          
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 3   

 115          /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 116          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)0x00080488u)
 117          
 118          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 119          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x00080494u)
 120          
 121          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 122          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x0008049Cu)
 123          
 124          /* IOPINS0_3 Address: CYREG_PRT3_DM0 Size (bytes): 8 */
 125          #define BS_IOPINS0_3_VAL ((const uint8 CYFAR *)0x000804A4u)
 126          
 127          /* IOPINS0_6 Address: CYREG_PRT6_DR Size (bytes): 10 */
 128          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x000804ACu)
 129          
 130          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 131          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x000804B8u)
 132          
 133          
 134          /*******************************************************************************
 135          * Function Name: ClockSetup
 136          ********************************************************************************
 137          *
 138          * Summary:
 139          *  Performs the initialization of all of the clocks in the device based on the
 140          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 141          *  clocks and setting the necessary dividers to produce the desired frequency. 
 142          *
 143          * Parameters:
 144          *  void
 145          *
 146          * Return:
 147          *  void
 148          *
 149          *******************************************************************************/
 150          static void ClockSetup(void);
 151          static void ClockSetup(void)
 152          {
 153   1              uint32 timeout;
 154   1              uint8 pllLock;
 155   1      
 156   1      
 157   1              /* Configure Digital Clocks based on settings from Clock DWR */
 158   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0000u);
 159   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x50u);
 160   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0138u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 162   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x2DF4u);
 163   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x19u);
 164   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x752Fu);
 165   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 166   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x752Fu);
 167   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x19u);
 168   1      
 169   1              /* Configure Analog Clocks based on settings from Clock DWR */
 170   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 171   1      
 172   1              /* Configure ILO based on settings from Clock DWR */
 173   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 174   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 175   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 4   

 176   1              /* Configure IMO based on settings from Clock DWR */
 177   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 178   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 179   1      
 180   1              /* Configure PLL based on settings from Clock DWR */
 181   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 182   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 183   1              /* Wait up to 250us for the PLL to lock */
 184   1              pllLock = 0u;
 185   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 186   1              { 
 187   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 188   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 189   2              }
 190   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 191   1              if (timeout == 0u)
 192   1              {
 193   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 194   2              }
 195   1      
 196   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 197   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 198   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 199   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 200   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 201   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 202   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 203   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 204   1      
 205   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x1Fu
             -)));
 206   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 207   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 208   1      }
 209          
 210          
 211          /* Analog API Functions */
 212          
 213          
 214          /*******************************************************************************
 215          * Function Name: AnalogSetDefault
 216          ********************************************************************************
 217          *
 218          * Summary:
 219          *  Sets up the analog portions of the chip to default values based on chip
 220          *  configuration options from the project.
 221          *
 222          * Parameters:
 223          *  void
 224          *
 225          * Return:
 226          *  void
 227          *
 228          *******************************************************************************/
 229          static void AnalogSetDefault(void);
 230          static void AnalogSetDefault(void)
 231          {
 232   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 5   

 233   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 234   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 235   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT6_AG, 0x20u);
 236   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x02u);
 237   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x66u);
 238   1      }
 239          
 240          
 241          /*******************************************************************************
 242          * Function Name: SetAnalogRoutingPumps
 243          ********************************************************************************
 244          *
 245          * Summary:
 246          * Enables or disables the analog pumps feeding analog routing switches.
 247          * Intended to be called at startup, based on the Vdda system configuration;
 248          * may be called during operation when the user informs us that the Vdda voltage
 249          * crossed the pump threshold.
 250          *
 251          * Parameters:
 252          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 253          *
 254          * Return:
 255          *  void
 256          *
 257          *******************************************************************************/
 258          void SetAnalogRoutingPumps(uint8 enabled)
 259          {
 260   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 261   1              if (enabled != 0u)
 262   1              {
 263   2                      regValue |= 0x22u;
 264   2              }
 265   1              else
 266   1              {
 267   2                      regValue &= (uint8)~0x22u;
 268   2              }
 269   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 270   1      }
 271          
 272          
 273          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 274          /* This is an implementation detail of the AMux. Code that depends on it may be
 275             incompatible with other versions of PSoC Creator. */
 276          uint8 CYXDATA * const CYCODE ADC_AMux__addrTable[2] = {
 277                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 278                  (uint8 CYXDATA *)CY_AMUX_UNUSED, 
 279          };
 280          
 281          /* This is an implementation detail of the AMux. Code that depends on it may be
 282             incompatible with other versions of PSoC Creator. */
 283          const uint8 CYCODE ADC_AMux__maskTable[2] = {
 284                  0x40u, 
 285                  0x00u, 
 286          };
 287          
 288          /*******************************************************************************
 289          * Function Name: ADC_AMux_Set
 290          ********************************************************************************
 291          * Summary:
 292          *  This function is used to set a particular channel as active on the AMux.
 293          *
 294          * Parameters:  
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 6   

 295          *   channel - The mux channel input to set as active
 296          *
 297          * Return:
 298          *   void
 299          *
 300          *******************************************************************************/
 301          void ADC_AMux_Set(uint8 channel)
 302          {
 303   1              if (channel < 2)
 304   1              {
 305   2                      *ADC_AMux__addrTable[channel] |= ADC_AMux__maskTable[channel];
 306   2              }
 307   1      }
 308          
 309          /*******************************************************************************
 310          * Function Name: ADC_AMux_Unset
 311          ********************************************************************************
 312          * Summary:
 313          *  This function is used to clear a particular channel from being active on the
 314          *  AMux.
 315          *
 316          * Parameters:  
 317          *   channel - The mux channel input to mark inactive
 318          *
 319          * Return:
 320          *   void
 321          *
 322          *******************************************************************************/
 323          void ADC_AMux_Unset(uint8 channel)
 324          {
 325   1              if (channel < 2)
 326   1              {
 327   2                      *ADC_AMux__addrTable[channel] &= (uint8)~ADC_AMux__maskTable[channel];
 328   2              }
 329   1      }
 330          
 331          
 332          
 333          /*******************************************************************************
 334          * Function Name: cyfitter_cfg
 335          ********************************************************************************
 336          * Summary:
 337          *  This function is called by the start-up code for the selected device. It
 338          *  performs all of the necessary device configuration based on the design
 339          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 340          *  as Clocks and Pins as well as any component configuration that is necessary.
 341          *
 342          * Parameters:
 343          *   void
 344          *
 345          * Return:
 346          *   void
 347          *
 348          *******************************************************************************/
 349          
 350          void cyfitter_cfg(void)
 351          {
 352   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 353   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 354   1      
 355   1              {
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 7   

 356   2      
 357   2                      CYPACKED typedef struct {
 358   2                              void CYFAR *address;
 359   2                              uint16 size;
 360   2                      } CYPACKED_ATTR cfg_memset_t;
 361   2      
 362   2      
 363   2                      CYPACKED typedef struct {
 364   2                              void CYFAR *dest;
 365   2                              const void CYFAR *src;
 366   2                              uint16 size;
 367   2                      } CYPACKED_ATTR cfg_memcpy_t;
 368   2      
 369   2                      static const cfg_memset_t CYCODE cfg_memset_list[] = {
 370   2                              /* address, size */
 371   2                              {(void CYFAR *)(CYREG_PRT4_DR), 32u},
 372   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 1152u},
 373   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P2_ROUTE_BASE), 2816u},
 374   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 375   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 376   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 377   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 378   2                      };
 379   2      
 380   2                      static const cfg_memcpy_t CYCODE cfg_memcpy_list [] = {
 381   2                              /* dest, src, size */
 382   2                              {(void CYFAR *)(CYDEV_PRTDSI_PRT12_BASE), BS_IOPORT_7_VAL, 6u},
 383   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P2_U1_BASE), BS_UDB_1_3_1_CONFIG_VAL, 128u},
 384   2                      };
 385   2      
 386   2                      uint8 CYDATA i;
 387   2      
 388   2                      /* Zero out critical memory blocks before beginning configuration */
 389   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 390   2                      {
 391   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 392   3                              CYMEMZERO(ms->address, ms->size);
 393   3                      }
 394   2      
 395   2                      /* Copy device configuration data into registers */
 396   2                      for (i = 0u; i < (sizeof(cfg_memcpy_list)/sizeof(cfg_memcpy_list[0])); i++)
 397   2                      {
 398   3                              const cfg_memcpy_t CYCODE * CYDATA mc = &cfg_memcpy_list[i];
 399   3                              void * CYDATA destPtr = mc->dest;
 400   3                              const void * CYDATA srcPtr = mc->src;
 401   3                              uint16 CYDATA numBytes = mc->size;
 402   3                              CYCONFIGCPY(destPtr, srcPtr, numBytes);
 403   3                      }
 404   2      
 405   2                      cfg_write_bytes(cfg_byte_table);
 406   2      
 407   2                      /* Perform normal device configuration. Order is not critical for these items. */
 408   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 409   2      
 410   2                      /* Enable digital routing */
 411   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 412   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 413   2      
 414   2                      /* Enable UDB array */
 415   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 8   

 416   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 417   2              }
 418   1      
 419   1      
 420   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 421   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 422   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DR), (const void CYFAR *)(BS_IOPINS0_7_VAL), 10u);
 423   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DR), (const void CYFAR *)(BS_IOPINS0_8_VAL), 10u);
 424   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (const void CYFAR *)(BS_IOPINS0_1_VAL), 8u);
 425   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 426   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT3_DM0), (const void CYFAR *)(BS_IOPINS0_3_VAL), 8u);
 427   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DR), (const void CYFAR *)(BS_IOPINS0_6_VAL), 10u);
 428   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 429   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 430   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 431   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 432   1              {
 433   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 434   2              }
 435   1      
 436   1      
 437   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 438   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0x31u : 0x00u));
 439   1              /* Setup clocks based on selections from Clock DWR */
 440   1              ClockSetup();
 441   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 442   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 443   1      
 444   1              /* Perform basic analog initialization to defaults */
 445   1              AnalogSetDefault();
 446   1      
 447   1              /* Configure alternate active mode */
 448   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 449   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 450   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 78
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 81
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 97
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 158
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 159
000D 904082            MOV     DPTR,#04082H
0010 7450              MOV     A,#050H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D38              MOV     R5,#038H
001B 7C01              MOV     R4,#01H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 161
0020 904086            MOV     DPTR,#04086H
0023 7418              MOV     A,#018H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7DF4              MOV     R5,#0F4H
002E 7C2D              MOV     R4,#02DH
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 163
0033 90408A            MOV     DPTR,#0408AH
0036 7419              MOV     A,#019H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0039 7B00              MOV     R3,#00H
003B 7A40              MOV     R2,#040H
003D 798C              MOV     R1,#08CH
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 10  

003F 7D2F              MOV     R5,#02FH
0041 7C75              MOV     R4,#075H
0043 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 165
0046 90408E            MOV     DPTR,#0408EH
0049 7419              MOV     A,#019H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
004C 7B00              MOV     R3,#00H
004E 7A40              MOV     R2,#040H
0050 7990              MOV     R1,#090H
0052 7D2F              MOV     R5,#02FH
0054 7C75              MOV     R4,#075H
0056 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 167
0059 904092            MOV     DPTR,#04092H
005C 7419              MOV     A,#019H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
005F 7B08              MOV     R3,#08H
0061 7A04              MOV     R2,#04H
0063 79B8              MOV     R1,#0B8H
0065 C003              PUSH    AR3
0067 C002              PUSH    AR2
0069 C001              PUSH    AR1
006B 7B00              MOV     R3,#00H
006D 7A41              MOV     R2,#041H
006F 7900              MOV     R1,#00H
0071 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0074 120000      E     LCALL   ?C?PSTXDATA
0077 D001              POP     AR1
0079 D002              POP     AR2
007B D003              POP     AR3
007D 7F04              MOV     R7,#04H
007F 7E00              MOV     R6,#00H
0081 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 173
0084 904300            MOV     DPTR,#04300H
0087 7402              MOV     A,#02H
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
008A 904000            MOV     DPTR,#04000H
008D 7408              MOV     A,#08H
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
0090 904200            MOV     DPTR,#04200H
0093 7403              MOV     A,#03H
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
0096 7B0C              MOV     R3,#0CH
0098 7A01              MOV     R2,#01H
009A 7908              MOV     R1,#08H
009C 120000      E     LCALL   _cyread8
009F 9046A1            MOV     DPTR,#046A1H
00A2 EF                MOV     A,R7
00A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
00A4 7B00              MOV     R3,#00H
00A6 7A42              MOV     R2,#042H
00A8 7922              MOV     R1,#022H
00AA 7D08              MOV     R5,#08H
00AC 7C00              MOV     R4,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 11  

00AE 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 182
00B1 7B00              MOV     R3,#00H
00B3 7A42              MOV     R2,#042H
00B5 7920              MOV     R1,#020H
00B7 7D51              MOV     R5,#051H
00B9 7C12              MOV     R4,#012H
00BB 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 184
00BE 900000      R     MOV     DPTR,#pllLock
00C1 E4                CLR     A
00C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
00C3 7F19              MOV     R7,#019H
00C5 7E00              MOV     R6,#00H
00C7 7D00              MOV     R5,#00H
00C9 7C00              MOV     R4,#00H
00CB 900000      R     MOV     DPTR,#timeout
00CE 120000      E     LCALL   ?C?LSTXDATA
00D1         ?C0004:
00D1 900000      R     MOV     DPTR,#timeout
00D4 120000      E     LCALL   ?C?LLDXDATA
00D7 D3                SETB    C
00D8 EF                MOV     A,R7
00D9 9400              SUBB    A,#00H
00DB EE                MOV     A,R6
00DC 9400              SUBB    A,#00H
00DE 404E              JC      ?C0005
00E0 900000      R     MOV     DPTR,#pllLock
00E3 E0                MOVX    A,@DPTR
00E4 FF                MOV     R7,A
00E5 EF                MOV     A,R7
00E6 6403              XRL     A,#03H
00E8 6044              JZ      ?C0005
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 187
00EA 904225            MOV     DPTR,#04225H
00ED E0                MOVX    A,@DPTR
00EE FF                MOV     R7,A
00EF EF                MOV     A,R7
00F0 5401              ANL     A,#01H
00F2 FF                MOV     R7,A
00F3 7E00              MOV     R6,#00H
00F5 900000      R     MOV     DPTR,#pllLock
00F8 E0                MOVX    A,@DPTR
00F9 FE                MOV     R6,A
00FA EE                MOV     A,R6
00FB 25E0              ADD     A,ACC
00FD FE                MOV     R6,A
00FE EE                MOV     A,R6
00FF 4F                ORL     A,R7
0100 FF                MOV     R7,A
0101 EF                MOV     A,R7
0102 5403              ANL     A,#03H
0104 FF                MOV     R7,A
0105 900000      R     MOV     DPTR,#pllLock
0108 EF                MOV     A,R7
0109 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
010A 7FE0              MOV     R7,#0E0H
010C 7E01              MOV     R6,#01H
010E 7D00              MOV     R5,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 12  

0110 7C00              MOV     R4,#00H
0112 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 189
0115 900000      R     MOV     DPTR,#timeout
0118 120000      E     LCALL   ?C?LLDXDATA
011B 7BFF              MOV     R3,#0FFH
011D 7AFF              MOV     R2,#0FFH
011F 79FF              MOV     R1,#0FFH
0121 78FF              MOV     R0,#0FFH
0123 120000      E     LCALL   ?C?LADD
0126 900000      R     MOV     DPTR,#timeout
0129 120000      E     LCALL   ?C?LSTXDATA
012C 80A3              SJMP    ?C0004
012E         ?C0005:
                                           ; SOURCE LINE # 191
012E 900000      R     MOV     DPTR,#timeout
0131 120000      E     LCALL   ?C?LLDXDATA
0134 EF                MOV     A,R7
0135 4E                ORL     A,R6
0136 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
0138 7F03              MOV     R7,#03H
013A 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 194
013D         ?C0007:
                                           ; SOURCE LINE # 197
013D 7B00              MOV     R3,#00H
013F 7A40              MOV     R2,#040H
0141 7904              MOV     R1,#04H
0143 7D00              MOV     R5,#00H
0145 7C01              MOV     R4,#01H
0147 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 198
014A 904004            MOV     DPTR,#04004H
014D 7407              MOV     A,#07H
014F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
0150 904006            MOV     DPTR,#04006H
0153 E4                CLR     A
0154 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
0155 904008            MOV     DPTR,#04008H
0158 7448              MOV     A,#048H
015A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
015B 904004            MOV     DPTR,#04004H
015E E4                CLR     A
015F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
0160 904001            MOV     DPTR,#04001H
0163 7402              MOV     A,#02H
0165 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
0166 90400B            MOV     DPTR,#0400BH
0169 7404              MOV     A,#04H
016B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
016C 9043A2            MOV     DPTR,#043A2H
016F E0                MOVX    A,@DPTR
0170 FF                MOV     R7,A
0171 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 13  

0172 441F              ORL     A,#01FH
0174 FF                MOV     R7,A
0175 9043A2            MOV     DPTR,#043A2H
0178 EF                MOV     A,R7
0179 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
017A 9043A1            MOV     DPTR,#043A1H
017D E0                MOVX    A,@DPTR
017E FF                MOV     R7,A
017F EF                MOV     A,R7
0180 4401              ORL     A,#01H
0182 FF                MOV     R7,A
0183 9043A1            MOV     DPTR,#043A1H
0186 EF                MOV     A,R7
0187 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
0188 9043A0            MOV     DPTR,#043A0H
018B E0                MOVX    A,@DPTR
018C FF                MOV     R7,A
018D EF                MOV     A,R7
018E 4480              ORL     A,#080H
0190 FF                MOV     R7,A
0191 9043A0            MOV     DPTR,#043A0H
0194 EF                MOV     A,R7
0195 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
0196 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 14  

002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
002F 90516D            MOV     DPTR,#0516DH
0032 7420              MOV     A,#020H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 236
0035 905B00            MOV     DPTR,#05B00H
0038 7402              MOV     A,#02H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
003B 905876            MOV     DPTR,#05876H
003E 7466              MOV     A,#066H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
0041 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 258
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 261
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 264
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 15  

                                           ; SOURCE LINE # 268
0035         ?C0011:
                                           ; SOURCE LINE # 269
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 270
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 301
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0014
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 16  

0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
0046         ?C0014:
0046 22                RET     
             ; FUNCTION _ADC_AMux_Set (END)

             ; FUNCTION _ADC_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 323
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0016
                                           ; SOURCE LINE # 326
                                           ; SOURCE LINE # 327
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 17  

0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
0049         ?C0016:
0049 22                RET     
             ; FUNCTION _ADC_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 353
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 389
0016 750000      R     MOV     i,#00H
0019         ?C0017:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9407              SUBB    A,#07H
001E 503A              JNC     ?C0018
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 392
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 18  

0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 393
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0017
005A         ?C0018:
                                           ; SOURCE LINE # 396
005A 750000      R     MOV     i,#00H
005D         ?C0020:
005D E500        R     MOV     A,i
005F C3                CLR     C
0060 9402              SUBB    A,#02H
0062 5078              JNC     ?C0021
                                           ; SOURCE LINE # 397
                                           ; SOURCE LINE # 398
0064 AF00        R     MOV     R7,i
0066 EF                MOV     A,R7
0067 75F008            MOV     B,#08H
006A A4                MUL     AB
006B 2400        R     ADD     A,#LOW cfg_memcpy_list
006D F582              MOV     DPL,A
006F E4                CLR     A
0070 3400        R     ADDC    A,#HIGH cfg_memcpy_list
0072 F583              MOV     DPH,A
0074 AF82              MOV     R7,DPL
0076 AE83              MOV     R6,DPH
0078 8E00        R     MOV     mc,R6
007A 8F00        R     MOV     mc+01H,R7
                                           ; SOURCE LINE # 399
007C AE00        R     MOV     R6,mc
007E AF00        R     MOV     R7,mc+01H
0080 8F82              MOV     DPL,R7
0082 8E83              MOV     DPH,R6
0084 120000      E     LCALL   ?C?PLDCODE
0087 8B00        R     MOV     destPtr,R3
0089 8A00        R     MOV     destPtr+01H,R2
008B 8900        R     MOV     destPtr+02H,R1
                                           ; SOURCE LINE # 400
008D AE00        R     MOV     R6,mc
008F AF00        R     MOV     R7,mc+01H
0091 8F82              MOV     DPL,R7
0093 8E83              MOV     DPH,R6
0095 A3                INC     DPTR
0096 A3                INC     DPTR
0097 A3                INC     DPTR
0098 120000      E     LCALL   ?C?PLDCODE
009B 8B00        R     MOV     srcPtr,R3
009D 8A00        R     MOV     srcPtr+01H,R2
009F 8900        R     MOV     srcPtr+02H,R1
                                           ; SOURCE LINE # 401
00A1 AE00        R     MOV     R6,mc
00A3 AF00        R     MOV     R7,mc+01H
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7406              MOV     A,#06H
00AB 93                MOVC    A,@A+DPTR
00AC F500        R     MOV     numBytes,A
00AE 7407              MOV     A,#07H
00B0 93                MOVC    A,@A+DPTR
00B1 F500        R     MOV     numBytes+01H,A
                                           ; SOURCE LINE # 402
00B3 AB00        R     MOV     R3,srcPtr
00B5 AA00        R     MOV     R2,srcPtr+01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 19  

00B7 A900        R     MOV     R1,srcPtr+02H
00B9 C003              PUSH    AR3
00BB C002              PUSH    AR2
00BD C001              PUSH    AR1
00BF AB00        R     MOV     R3,destPtr
00C1 AA00        R     MOV     R2,destPtr+01H
00C3 A900        R     MOV     R1,destPtr+02H
00C5 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C8 120000      E     LCALL   ?C?PSTXDATA
00CB D001              POP     AR1
00CD D002              POP     AR2
00CF D003              POP     AR3
00D1 AF00        R     MOV     R7,numBytes+01H
00D3 AE00        R     MOV     R6,numBytes
00D5 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 403
00D8 0500        R     INC     i
00DA 8081              SJMP    ?C0020
00DC         ?C0021:
                                           ; SOURCE LINE # 405
00DC 7B08              MOV     R3,#08H
00DE 7A00              MOV     R2,#00H
00E0 7900              MOV     R1,#00H
00E2 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 408
00E5 905883            MOV     DPTR,#05883H
00E8 740A              MOV     A,#0AH
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 411
00EB 7B01              MOV     R3,#01H
00ED 7A50              MOV     R2,#050H
00EF 7903              MOV     R1,#03H
00F1 120000      E     LCALL   _cyread8
00F4 EF                MOV     A,R7
00F5 4402              ORL     A,#02H
00F7 FD                MOV     R5,A
00F8 7B01              MOV     R3,#01H
00FA 7A50              MOV     R2,#050H
00FC 7903              MOV     R1,#03H
00FE 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 412
0101 7B01              MOV     R3,#01H
0103 7A50              MOV     R2,#050H
0105 7913              MOV     R1,#013H
0107 120000      E     LCALL   _cyread8
010A EF                MOV     A,R7
010B 4402              ORL     A,#02H
010D FD                MOV     R5,A
010E 7B01              MOV     R3,#01H
0110 7A50              MOV     R2,#050H
0112 7913              MOV     R1,#013H
0114 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 415
0117 9043A0            MOV     DPTR,#043A0H
011A E0                MOVX    A,@DPTR
011B FF                MOV     R7,A
011C EF                MOV     A,R7
011D 4440              ORL     A,#040H
011F FF                MOV     R7,A
0120 9043A0            MOV     DPTR,#043A0H
0123 EF                MOV     A,R7
0124 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 20  

                                           ; SOURCE LINE # 416
0125 9043C2            MOV     DPTR,#043C2H
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A EF                MOV     A,R7
012B 4410              ORL     A,#010H
012D FF                MOV     R7,A
012E 9043C2            MOV     DPTR,#043C2H
0131 EF                MOV     A,R7
0132 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
                                           ; SOURCE LINE # 421
0133 7B08              MOV     R3,#08H
0135 7A04              MOV     R2,#04H
0137 7974              MOV     R1,#074H
0139 C003              PUSH    AR3
013B C002              PUSH    AR2
013D C001              PUSH    AR1
013F 7B00              MOV     R3,#00H
0141 7A51              MOV     R2,#051H
0143 7902              MOV     R1,#02H
0145 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0148 120000      E     LCALL   ?C?PSTXDATA
014B D001              POP     AR1
014D D002              POP     AR2
014F D003              POP     AR3
0151 7F08              MOV     R7,#08H
0153 7E00              MOV     R6,#00H
0155 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 422
0158 7B08              MOV     R3,#08H
015A 7A04              MOV     R2,#04H
015C 797C              MOV     R1,#07CH
015E C003              PUSH    AR3
0160 C002              PUSH    AR2
0162 C001              PUSH    AR1
0164 7B00              MOV     R3,#00H
0166 7A51              MOV     R2,#051H
0168 79C0              MOV     R1,#0C0H
016A 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
016D 120000      E     LCALL   ?C?PSTXDATA
0170 D001              POP     AR1
0172 D002              POP     AR2
0174 D003              POP     AR3
0176 7F0A              MOV     R7,#0AH
0178 7E00              MOV     R6,#00H
017A 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 423
017D 7B08              MOV     R3,#08H
017F 7A04              MOV     R2,#04H
0181 7988              MOV     R1,#088H
0183 C003              PUSH    AR3
0185 C002              PUSH    AR2
0187 C001              PUSH    AR1
0189 7B00              MOV     R3,#00H
018B 7A51              MOV     R2,#051H
018D 79F0              MOV     R1,#0F0H
018F 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0192 120000      E     LCALL   ?C?PSTXDATA
0195 D001              POP     AR1
0197 D002              POP     AR2
0199 D003              POP     AR3
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 21  

019B 7F0A              MOV     R7,#0AH
019D 7E00              MOV     R6,#00H
019F 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 424
01A2 7B08              MOV     R3,#08H
01A4 7A04              MOV     R2,#04H
01A6 7994              MOV     R1,#094H
01A8 C003              PUSH    AR3
01AA C002              PUSH    AR2
01AC C001              PUSH    AR1
01AE 7B00              MOV     R3,#00H
01B0 7A51              MOV     R2,#051H
01B2 7912              MOV     R1,#012H
01B4 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01B7 120000      E     LCALL   ?C?PSTXDATA
01BA D001              POP     AR1
01BC D002              POP     AR2
01BE D003              POP     AR3
01C0 7F08              MOV     R7,#08H
01C2 7E00              MOV     R6,#00H
01C4 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 425
01C7 7B08              MOV     R3,#08H
01C9 7A04              MOV     R2,#04H
01CB 799C              MOV     R1,#09CH
01CD C003              PUSH    AR3
01CF C002              PUSH    AR2
01D1 C001              PUSH    AR1
01D3 7B00              MOV     R3,#00H
01D5 7A51              MOV     R2,#051H
01D7 7922              MOV     R1,#022H
01D9 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01DC 120000      E     LCALL   ?C?PSTXDATA
01DF D001              POP     AR1
01E1 D002              POP     AR2
01E3 D003              POP     AR3
01E5 7F08              MOV     R7,#08H
01E7 7E00              MOV     R6,#00H
01E9 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 426
01EC 7B08              MOV     R3,#08H
01EE 7A04              MOV     R2,#04H
01F0 79A4              MOV     R1,#0A4H
01F2 C003              PUSH    AR3
01F4 C002              PUSH    AR2
01F6 C001              PUSH    AR1
01F8 7B00              MOV     R3,#00H
01FA 7A51              MOV     R2,#051H
01FC 7932              MOV     R1,#032H
01FE 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0201 120000      E     LCALL   ?C?PSTXDATA
0204 D001              POP     AR1
0206 D002              POP     AR2
0208 D003              POP     AR3
020A 7F08              MOV     R7,#08H
020C 7E00              MOV     R6,#00H
020E 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 427
0211 7B08              MOV     R3,#08H
0213 7A04              MOV     R2,#04H
0215 79AC              MOV     R1,#0ACH
0217 C003              PUSH    AR3
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 22  

0219 C002              PUSH    AR2
021B C001              PUSH    AR1
021D 7B00              MOV     R3,#00H
021F 7A51              MOV     R2,#051H
0221 7960              MOV     R1,#060H
0223 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0226 120000      E     LCALL   ?C?PSTXDATA
0229 D001              POP     AR1
022B D002              POP     AR2
022D D003              POP     AR3
022F 7F0A              MOV     R7,#0AH
0231 7E00              MOV     R6,#00H
0233 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 428
0236 9044F4            MOV     DPTR,#044F4H
0239 7401              MOV     A,#01H
023B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 430
023C 904322            MOV     DPTR,#04322H
023F E0                MOVX    A,@DPTR
0240 FF                MOV     R7,A
0241 EF                MOV     A,R7
0242 4408              ORL     A,#08H
0244 FF                MOV     R7,A
0245 904322            MOV     DPTR,#04322H
0248 EF                MOV     A,R7
0249 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 431
024A 9046EC            MOV     DPTR,#046ECH
024D E0                MOVX    A,@DPTR
024E FF                MOV     R7,A
024F EF                MOV     A,R7
0250 C3                CLR     C
0251 9405              SUBB    A,#05H
0253 5006              JNC     ?C0023
                                           ; SOURCE LINE # 432
                                           ; SOURCE LINE # 433
0255 904689            MOV     DPTR,#04689H
0258 743A              MOV     A,#03AH
025A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 434
025B         ?C0023:
                                           ; SOURCE LINE # 438
025B 904800            MOV     DPTR,#04800H
025E 7431              MOV     A,#031H
0260 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 440
0261 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 442
0264 904800            MOV     DPTR,#04800H
0267 74B1              MOV     A,#0B1H
0269 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 445
026A 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 448
026D 7B00              MOV     R3,#00H
026F 7A43              MOV     R2,#043H
0271 79A0              MOV     R1,#0A0H
0273 C003              PUSH    AR3
0275 C002              PUSH    AR2
0277 C001              PUSH    AR1
0279 7B00              MOV     R3,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/03/2019 18:09:24 PAGE 23  

027B 7A43              MOV     R2,#043H
027D 79B0              MOV     R1,#0B0H
027F 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0282 120000      E     LCALL   ?C?PSTXDATA
0285 D001              POP     AR1
0287 D002              POP     AR2
0289 D003              POP     AR3
028B 7F0E              MOV     R7,#0EH
028D 7E00              MOV     R6,#00H
028F 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 449
0292 9043B0            MOV     DPTR,#043B0H
0295 E0                MOVX    A,@DPTR
0296 FF                MOV     R7,A
0297 EF                MOV     A,R7
0298 54FD              ANL     A,#0FDH
029A FF                MOV     R7,A
029B EF                MOV     A,R7
029C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 450
029D 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1370    ----
   CONSTANT SIZE    =     57    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
