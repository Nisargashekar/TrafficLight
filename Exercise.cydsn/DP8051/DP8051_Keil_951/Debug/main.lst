C51 COMPILER V9.51   MAIN                                                                  04/07/2019 21:17:08 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBUG) WL(2) PR(.\DP8051\DP8051_Ke
                    -il_951\Debug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include "project.h"
  13          
  14          #define ON  1
  15          #define OFF 0
  16          
  17          #define RED_Duration 8
  18          #define GREEN_DURATION 4
  19          #define AMBER_DURATION 2
  20          
  21          enum {RED, WAIT_FOR_RED_COMPLETE, AMBER,WAIT_FOR_AMBER_COMPLETE, GREEN, WAIT_FOR_GREEN_COMPLETE,NOT_DEFINE
             -D_STATE };
  22          uint8 TimeInState;
  23          uint8 CurrentState;
  24          uint8 SwitchPressCount = 0;
  25          
  26          int main(void)
  27          {
  28   1          CyGlobalIntEnable; /* Enable global interrupts. */
  29   1      
  30   1          CurrentState = NOT_DEFINED_STATE;
  31   1          /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  32   1            LED_UpdateTimer_Init();
  33   1            LED_UpdateISR_Start();
  34   1      
  35   1      
  36   1          for(;;)
  37   1          {
  38   2              /* Place your application code here. */
  39   2              if((SwitchPressCount >= 1)&& (Switch1_Read()== 0)){
  40   3                  SwitchPressCount =0;
  41   3                  LED_UpdateTimer_Stop();
  42   3                  CurrentState = NOT_DEFINED_STATE;
  43   3                  Red_LED_Write(OFF);
  44   3                  Amber_LED_Write(OFF);
  45   3                  Green_LED_Write(OFF);
  46   3              } 
  47   2              else if((Switch2_Read()== 0) && (SwitchPressCount == 0)){
  48   3                 LED_UpdateTimer_initVar = 1u; 
  49   3                 LED_UpdateTimer_Enable(); 
  50   3                 SwitchPressCount++; 
  51   3                 CurrentState = RED ;
  52   3              }
C51 COMPILER V9.51   MAIN                                                                  04/07/2019 21:17:08 PAGE 2   

  53   2               
  54   2              
  55   2              switch(CurrentState){
  56   3                  case RED:{
  57   4                      Red_LED_Write(ON);
  58   4                      Green_LED_Write(OFF);
  59   4                      
  60   4                      //SwitchPressCount++;
  61   4                      
  62   4                      CurrentState = WAIT_FOR_RED_COMPLETE;
  63   4                      break;
  64   4                  }
  65   3                  case WAIT_FOR_RED_COMPLETE:{
  66   4                      if(TimeInState == RED_Duration){
  67   5                          TimeInState =0;
  68   5                          CurrentState = AMBER;
  69   5                      }
  70   4                      break;
  71   4                  }
  72   3                  case AMBER:{
  73   4                      Red_LED_Write(OFF);
  74   4                      Amber_LED_Write(ON);
  75   4                      CurrentState = WAIT_FOR_AMBER_COMPLETE;
  76   4                      break;
  77   4                  }
  78   3                  case WAIT_FOR_AMBER_COMPLETE:{
  79   4                      if(TimeInState == AMBER_DURATION){
  80   5                          TimeInState =0;
  81   5                          CurrentState = GREEN;
  82   5                      }
  83   4                      break;
  84   4                  }
  85   3                  case GREEN:{
  86   4                      Amber_LED_Write(OFF);
  87   4                      Green_LED_Write(ON);
  88   4                      CurrentState = WAIT_FOR_GREEN_COMPLETE;
  89   4                      break;
  90   4                  }
  91   3                  case WAIT_FOR_GREEN_COMPLETE:{
  92   4                    if(TimeInState == GREEN_DURATION){
  93   5                          TimeInState =0;
  94   5                          CurrentState = RED;
  95   5                      }
  96   4                      break;
  97   4                  }
  98   3              }
  99   2          }
 100   1      }
 101          
 102          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  04/07/2019 21:17:08 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0000 D2AF              SETB    EA
0002 9044F4            MOV     DPTR,#044F4H
0005 74FD              MOV     A,#0FDH
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 30
0008 900000      R     MOV     DPTR,#CurrentState
000B 7406              MOV     A,#06H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 32
000E 120000      E     LCALL   LED_UpdateTimer_Init
                                           ; SOURCE LINE # 33
0011 120000      E     LCALL   LED_UpdateISR_Start
                                           ; SOURCE LINE # 36
0014         ?C0001:
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 39
0014 900000      R     MOV     DPTR,#SwitchPressCount
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 EF                MOV     A,R7
001A C3                CLR     C
001B 9401              SUBB    A,#01H
001D 4025              JC      ?C0003
001F 120000      E     LCALL   Switch1_Read
0022 EF                MOV     A,R7
0023 701F              JNZ     ?C0003
                                           ; SOURCE LINE # 40
0025 900000      R     MOV     DPTR,#SwitchPressCount
0028 E4                CLR     A
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 41
002A 120000      E     LCALL   LED_UpdateTimer_Stop
                                           ; SOURCE LINE # 42
002D 900000      R     MOV     DPTR,#CurrentState
0030 7406              MOV     A,#06H
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 43
0033 7F00              MOV     R7,#00H
0035 120000      E     LCALL   _Red_LED_Write
                                           ; SOURCE LINE # 44
0038 7F00              MOV     R7,#00H
003A 120000      E     LCALL   _Amber_LED_Write
                                           ; SOURCE LINE # 45
003D 7F00              MOV     R7,#00H
003F 120000      E     LCALL   _Green_LED_Write
                                           ; SOURCE LINE # 46
0042 8022              SJMP    ?C0004
0044         ?C0003:
                                           ; SOURCE LINE # 47
0044 120000      E     LCALL   Switch2_Read
0047 EF                MOV     A,R7
0048 701C              JNZ     ?C0004
004A 900000      R     MOV     DPTR,#SwitchPressCount
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
C51 COMPILER V9.51   MAIN                                                                  04/07/2019 21:17:08 PAGE 4   

004F EF                MOV     A,R7
0050 7014              JNZ     ?C0004
                                           ; SOURCE LINE # 48
0052 900000      E     MOV     DPTR,#LED_UpdateTimer_initVar
0055 7401              MOV     A,#01H
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
0058 120000      E     LCALL   LED_UpdateTimer_Enable
                                           ; SOURCE LINE # 50
005B 900000      R     MOV     DPTR,#SwitchPressCount
005E E0                MOVX    A,@DPTR
005F 04                INC     A
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 51
0061 900000      R     MOV     DPTR,#CurrentState
0064 E4                CLR     A
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 52
0066         ?C0004:
                                           ; SOURCE LINE # 55
0066 900000      R     MOV     DPTR,#CurrentState
0069 E0                MOVX    A,@DPTR
006A FF                MOV     R7,A
006B EF                MOV     A,R7
006C 120000      E     LCALL   ?C?CCASE
006F 0000        R     DW      ?C0007
0071 00                DB      00H
0072 0000        R     DW      ?C0008
0074 01                DB      01H
0075 0000        R     DW      ?C0010
0077 02                DB      02H
0078 0000        R     DW      ?C0011
007A 03                DB      03H
007B 0000        R     DW      ?C0013
007D 04                DB      04H
007E 0000        R     DW      ?C0014
0080 05                DB      05H
0081 0000              DW      00H
0083 0000        R     DW      ?C0001
                                           ; SOURCE LINE # 56
0085         ?C0007:
                                           ; SOURCE LINE # 57
0085 7F01              MOV     R7,#01H
0087 120000      E     LCALL   _Red_LED_Write
                                           ; SOURCE LINE # 58
008A 7F00              MOV     R7,#00H
008C 120000      E     LCALL   _Green_LED_Write
                                           ; SOURCE LINE # 62
008F 900000      R     MOV     DPTR,#CurrentState
0092 7401              MOV     A,#01H
0094 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 63
0095 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0098         ?C0008:
                                           ; SOURCE LINE # 66
0098 900000      R     MOV     DPTR,#TimeInState
009B E0                MOVX    A,@DPTR
009C FF                MOV     R7,A
009D EF                MOV     A,R7
009E 6408              XRL     A,#08H
C51 COMPILER V9.51   MAIN                                                                  04/07/2019 21:17:08 PAGE 5   

00A0 6003              JZ      $ + 5H
00A2 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 67
00A5 900000      R     MOV     DPTR,#TimeInState
00A8 E4                CLR     A
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
00AA 900000      R     MOV     DPTR,#CurrentState
00AD 7402              MOV     A,#02H
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
00B0 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
00B3         ?C0010:
                                           ; SOURCE LINE # 73
00B3 7F00              MOV     R7,#00H
00B5 120000      E     LCALL   _Red_LED_Write
                                           ; SOURCE LINE # 74
00B8 7F01              MOV     R7,#01H
00BA 120000      E     LCALL   _Amber_LED_Write
                                           ; SOURCE LINE # 75
00BD 900000      R     MOV     DPTR,#CurrentState
00C0 7403              MOV     A,#03H
00C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
00C3 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
00C6         ?C0011:
                                           ; SOURCE LINE # 79
00C6 900000      R     MOV     DPTR,#TimeInState
00C9 E0                MOVX    A,@DPTR
00CA FF                MOV     R7,A
00CB EF                MOV     A,R7
00CC 6402              XRL     A,#02H
00CE 6003              JZ      $ + 5H
00D0 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 80
00D3 900000      R     MOV     DPTR,#TimeInState
00D6 E4                CLR     A
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
00D8 900000      R     MOV     DPTR,#CurrentState
00DB 7404              MOV     A,#04H
00DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
00DE 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
00E1         ?C0013:
                                           ; SOURCE LINE # 86
00E1 7F00              MOV     R7,#00H
00E3 120000      E     LCALL   _Amber_LED_Write
                                           ; SOURCE LINE # 87
00E6 7F01              MOV     R7,#01H
00E8 120000      E     LCALL   _Green_LED_Write
                                           ; SOURCE LINE # 88
00EB 900000      R     MOV     DPTR,#CurrentState
00EE 7405              MOV     A,#05H
C51 COMPILER V9.51   MAIN                                                                  04/07/2019 21:17:08 PAGE 6   

00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 89
00F1 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
00F4         ?C0014:
                                           ; SOURCE LINE # 92
00F4 900000      R     MOV     DPTR,#TimeInState
00F7 E0                MOVX    A,@DPTR
00F8 FF                MOV     R7,A
00F9 EF                MOV     A,R7
00FA 6404              XRL     A,#04H
00FC 6003              JZ      $ + 5H
00FE 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 93
0101 900000      R     MOV     DPTR,#TimeInState
0104 E4                CLR     A
0105 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 94
0106 900000      R     MOV     DPTR,#CurrentState
0109 E4                CLR     A
010A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
010B 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
010E 020000      R     LJMP    ?C0001
0111 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    274    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
